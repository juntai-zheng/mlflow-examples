conda_env: conda.yaml

entry_points:
  gbt-regression-main:
    parameters:
      data-path: str
      n-trees: {type: int, default: 100}
      m-depth: {type: int, default: 3}
      learning-rate: {type: float, default: .1}
      test-percent: {type: float, default: .3}
      loss: {type: str, default: "rmse"}
      label-col: str
      feat-cols: str
    command: "python gbt-regression/main_gbt.py {data-path} {n-trees} {m-depth} {learning-rate} {test-percent} {loss} {label-col} {feat-cols}"
  gbt-regression-example:
    parameters:
      n-trees: {type: int, default: 100}
      m-depth: {type: int, default: 3}
      learning-rate: {type: float, default: .1}
      test-percent: {type: float, default: .3}
      loss: {type: str, default: "rmse"}
      label-col: str
      feat-cols: str
    command: "python gbt-regression/example_gbt.py {n-trees} {m-depth} {learning-rate} {test-percent} {loss} {label-col} {feat-cols}"
  linear-regression-main:
    parameters:
      data-path: str
      alpha: {type: float, default: .001}
      l1-ratio: {type: float, default: .5}
      test-percent: {type: float, default: .3}
      label-col: str
    command: "python linear-regression/main_linear.py {data-path} {alpha} {l1-ratio} {test-percent} {label-col}"
  linear-regression-example:
    parameters:
      alpha: {type: float, default: .001}
      l1-ratio: {type: float, default: .5}
      test-percent: {type: float, default: .3}
      label-col: str
    command: "python linear-regression/example_linear.py {alpha} {l1-ratio} {test-percent} {label-col}"
  dnn-regression-main:
    parameters:
      training-data-path: str
      test-data-path: str
      hidden-units: str
      steps: {type: int, default: 100}
      batch-size: {type: int, default: 128}
      label-col: str
    command: "python dnn-regression/main_dnn.py {training-data-path} {test-data-path} {hidden-units} {steps} {batch-size} {label-col}"
